/* =======================================
 * Generated by Move-To-Yul compiler v0.0
 * ======================================= */

/// @use-src 2:"tests/fallback-receive-test/FallbackOnly.move"

object "A2_M" {
    code {
        codecopy(0, dataoffset("A2_M_deployed"), datasize("A2_M_deployed"))
        return(0, datasize("A2_M_deployed"))
    }
    object "A2_M_deployed" {
        code {
            mstore(0, memoryguard(160))
            if iszero(lt(calldatasize(), 4))
            {
                let selector := $ShiftRight(224, calldataload(0))
                switch selector
                default {}
            }
            if callvalue()
            {
                $Abort(99)
            }
            A2_M_fallback() stop()
            function A2_M_fallback() {
                // return ()
                /// @src 2:61:65
            }

            function $Abort(code) {
                mstore(0, code)
                revert(24, 8) // TODO: store code as a string?
            }
            function $ShiftRight(bits, value) -> r {
                r := shr(bits, value) // evm version >= constantinople
            }
        }
    }
}


!! Optimized Yul

/// @use-src 2:"tests/fallback-receive-test/FallbackOnly.move"
object "A2_M" {
    code {
        {
            let _1 := datasize("A2_M_deployed")
            codecopy(0, dataoffset("A2_M_deployed"), _1)
            return(0, _1)
        }
    }
    object "A2_M_deployed" {
        code {
            {
                mstore(0, memoryguard(0xa0))
                if callvalue()
                {
                    mstore(0, 99)
                    revert(24, 8)
                }
                stop()
            }
        }
    }
}
